apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: gather-deploy-images
spec:
  description: Extract Images from deployment Yaml to Pass to EC
  params:
    - name: gitops-repo-url
      type: string
      description: URL of gitops repository to update with the newly built image.
    - name: revision
      value: $(params.revision) 
    - name: target-branch
      value: $(params.target-branch) 
    - name: commit-message
      type: string
      description: Pass "/promote development" or "/promote stage"
    - name: gitops-auth-secret-name
      type: string
      default: gitops-auth-secret
      description: |
        Secret of basic-auth type containing credentials to commit into gitops repository.
  workspaces:
  - description: The git repo will be cloned onto the volume backing this Workspace.
    name: output
  results:
    - name: IMAGES_TO_VERIFY
      description: The images needed to be verified 
  volumes:
    - name: gitops-auth-secret
      secret:
        secretName: $(params.gitops-auth-secret-name)
        optional: true
  steps:
  - name: get-images-per-env  
    image: quay.io/redhat-appstudio/appstudio-utils:d8a93bf5650424a4f20ee065578609792d70af1c
    script: |
      #!/bin/bash
      #separate image to access yq command 
      cd /workspace/output/source
      COMPONENT_NAME=$(yq .metadata.name application.yaml)
      IMG_PATH=".spec.template.spec.containers[0].image"
      DEV_IMAGE=$(yq "$IMG_PATH" components/${COMPONENT_NAME}/overlays/development/deployment-patch.yaml)
      STAGE_IMAGE=$(yq "$IMG_PATH" components/${COMPONENT_NAME}/overlays/stage/deployment-patch.yaml)
      PROD_IMAGE=$(yq "$IMG_PATH" components/${COMPONENT_NAME}/overlays/prod/deployment-patch.yaml)

      COMPONENT_IMAGES=/workspace/output/component-images.json
      cat <<COMPONENT_IMAGES >$COMPONENT_IMAGES
      {
            "components": [
              {
                "containerImage": "$DEV_IMAGE"
              },
              
              {
                "containerImage": "$STAGE_IMAGE"
              },
              
              {
                "containerImage": "$PROD_IMAGE"
              }
            ]
      }
      COMPONENT_IMAGES

      echo "IMAGE TO VERIFY" 
      cat "$COMPONENT_IMAGES" | tee $(results.IMAGES_TO_VERIFY.path)  
      echo "done"  